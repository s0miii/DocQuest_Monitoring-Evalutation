# Generated by Django 5.0.7 on 2025-01-16 18:34

import django.db.models.deletion
import django.utils.timezone
import monitoring_evaluation.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('docquestapp', '0025_alter_faculty_userid'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CollegePerformanceRow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campus', models.CharField(blank=True, max_length=255, null=True)),
                ('programs_number', models.FloatField(blank=True, null=True)),
                ('programs_percentage', models.FloatField(blank=True, null=True)),
                ('faculty_number', models.FloatField(blank=True, null=True)),
                ('faculty_percentage', models.FloatField(blank=True, null=True)),
                ('average_percentage', models.FloatField(blank=True, null=True)),
                ('persons_trained_target', models.FloatField(blank=True, null=True)),
                ('persons_trained_weighted_accomplishment', models.FloatField(blank=True, null=True)),
                ('persons_trained_variance', models.FloatField(blank=True, null=True)),
                ('partnerships_target', models.FloatField(blank=True, null=True)),
                ('partnerships_accomplishment', models.FloatField(blank=True, null=True)),
                ('partnerships_variance', models.FloatField(blank=True, null=True)),
                ('beneficiaries_target', models.FloatField(blank=True, null=True)),
                ('beneficiaries_accomplishment', models.FloatField(blank=True, null=True)),
                ('beneficiaries_variance', models.FloatField(blank=True, null=True)),
                ('extension_programs_target', models.FloatField(blank=True, null=True)),
                ('extension_programs_accomplishment', models.FloatField(blank=True, null=True)),
                ('extension_programs_variance', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExtensionProgramOC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memorandum_of_agreements', models.TextField()),
                ('extension_program', models.TextField()),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('campus', models.CharField(max_length=255)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExtensionProgramOp2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mandated_priority_program', models.CharField(max_length=255)),
                ('quarter', models.CharField(choices=[('1st Quarter', '1st Quarter'), ('2nd Quarter', '2nd Quarter'), ('3rd Quarter', '3rd Quarter'), ('4th Quarter', '4th Quarter')], max_length=50)),
                ('extension_program', models.CharField(max_length=255)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('campus', models.CharField(max_length=255)),
                ('remarks', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectNarrative',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activities_topics', models.TextField(verbose_name='Activities and Topics Covered')),
                ('issues_challenges', models.TextField(verbose_name='Issues and Challenges Encountered')),
                ('participant_engagement_quality', models.TextField(verbose_name="Quality of Participants' Engagement")),
                ('discussion_comments', models.TextField(verbose_name='Discussion and Comments')),
                ('ways_forward_plans', models.TextField(verbose_name='Ways Forward and Plans')),
            ],
        ),
        migrations.CreateModel(
            name='AccomplishmentReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner_program_title', models.CharField(max_length=255)),
                ('flagship_program', models.CharField(max_length=255)),
                ('training_modality', models.CharField(choices=[('Virtual', 'Virtual'), ('Face to Face', 'Face to Face'), ('Blended', 'Blended')], max_length=50)),
                ('actualStartDateImplementation', models.DateField()),
                ('actualEndDateImplementation', models.DateField()),
                ('total_number_of_days', models.IntegerField(blank=True, editable=False, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accomplishment_reports', to='docquestapp.project')),
                ('submitted_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_accomplishments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AttendanceTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('templateName', models.CharField(default='Attendance Template', max_length=255)),
                ('include_attendee_name', models.BooleanField(default=False)),
                ('include_gender', models.BooleanField(default=False)),
                ('include_college', models.BooleanField(default=False)),
                ('include_department', models.BooleanField(default=False)),
                ('include_year_section', models.BooleanField(default=False)),
                ('include_agency_office', models.BooleanField(default=False)),
                ('include_contact_number', models.BooleanField(default=False)),
                ('sharable_link', models.URLField(blank=True, max_length=500, null=True)),
                ('token', models.CharField(default=monitoring_evaluation.models.generate_token_32, max_length=64, unique=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_templates', to='docquestapp.project')),
                ('trainerLoad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attendance_templates', to='docquestapp.loadingoftrainers')),
            ],
        ),
        migrations.CreateModel(
            name='ChecklistAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_submit_daily_attendance', models.BooleanField(default=False)),
                ('can_submit_summary_of_evaluation', models.BooleanField(default=False)),
                ('can_submit_trainer_cv_dtr', models.BooleanField(default=False)),
                ('can_submit_modules_lecture_notes', models.BooleanField(default=False)),
                ('can_submit_other_files', models.BooleanField(default=False)),
                ('can_submit_photo_documentation', models.BooleanField(default=False)),
                ('is_completed', models.BooleanField(default=False)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklist_assignments', to='docquestapp.project')),
                ('proponent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_checklists', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CreatedAttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendee_name', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, max_length=50, null=True)),
                ('college', models.CharField(blank=True, max_length=255, null=True)),
                ('department', models.CharField(blank=True, max_length=255, null=True)),
                ('year_section', models.CharField(blank=True, max_length=255, null=True)),
                ('agency_office', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=50, null=True)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='docquestapp.project')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring_evaluation.attendancetemplate')),
            ],
        ),
        migrations.CreateModel(
            name='DailyAttendanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_file', models.FileField(blank=True, null=True, upload_to='attendance_records/')),
                ('total_attendees', models.PositiveIntegerField(blank=True, null=True)),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_attendance_records', to='docquestapp.project')),
                ('proponent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='daily_attendance_submissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationSharableLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(default=monitoring_evaluation.models.generate_token_32, max_length=64, unique=True)),
                ('sharable_link', models.URLField(blank=True, max_length=500, null=True)),
                ('expiration_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation_links', to='docquestapp.project')),
                ('proponent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evaluation_links', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_evaluations', models.IntegerField(default=0)),
                ('categories', models.JSONField(default=dict)),
                ('percentages', models.JSONField(default=dict)),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='docquestapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='ModulesLectureNotes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_file', models.FileField(blank=True, null=True, upload_to='lecture_notes/')),
                ('description', models.TextField(blank=True, null=True)),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecture_notes', to='docquestapp.project')),
                ('proponent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lecture_notes_submissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient_email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_logs', to='docquestapp.project')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OtherFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='other_files/')),
                ('description', models.TextField(blank=True, null=True)),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='other_files', to='docquestapp.project')),
                ('proponent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='other_files_submissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PhotoDocumentation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photo_documentations/')),
                ('description', models.TextField(blank=True, null=True)),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_documentations', to='docquestapp.project')),
                ('proponent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='photo_documentations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PREXCAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('persons_trained_weighted_days', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('actual_trainees', models.PositiveIntegerField(default=0)),
                ('actual_days_training', models.PositiveIntegerField(default=0)),
                ('persons_trained', models.PositiveIntegerField(default=0)),
                ('satisfactory_trainees', models.PositiveIntegerField(default=0)),
                ('rating_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('accomplishment_report', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='linked_prexc_achievement', to='monitoring_evaluation.accomplishmentreport')),
            ],
        ),
        migrations.AddField(
            model_name='accomplishmentreport',
            name='prexc_achievement',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='linked_accomplishment_report', to='monitoring_evaluation.prexcachievement'),
        ),
        migrations.AddField(
            model_name='accomplishmentreport',
            name='project_narrative',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accomplishment_report', to='monitoring_evaluation.projectnarrative'),
        ),
        migrations.CreateModel(
            name='SummaryOfEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary_file', models.FileField(blank=True, null=True, upload_to='evaluation_summaries/')),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation_summaries', to='docquestapp.project')),
                ('proponent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evaluation_submissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TotalAttendees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_attendees', models.PositiveIntegerField(default=0)),
                ('average_attendees', models.FloatField(default=0.0)),
                ('num_templates', models.PositiveIntegerField(default=0)),
                ('calculated_at', models.DateTimeField(auto_now=True)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='total_attendees', to='docquestapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='TrainerCvDtr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_file', models.FileField(blank=True, null=True, upload_to='trainer_cv_dtr/')),
                ('description', models.TextField(blank=True, null=True)),
                ('date_uploaded', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Pending', max_length=20)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_cv_dtr', to='docquestapp.project')),
                ('proponent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trainer_cv_dtr_submissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendee_name', models.CharField(max_length=255)),
                ('relevance_of_topics', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('organizational_flow', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('learning_methods', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('technology_use', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('time_efficiency', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('mastery_subject', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('preparedness', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('audience_participation', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('interest_level', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('handle_questions', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('voice_personality', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('visual_aids', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('useful_concepts', models.TextField(blank=True, null=True)),
                ('improvement_areas', models.TextField(blank=True, null=True)),
                ('additional_comments', models.TextField(blank=True, null=True)),
                ('venue_assessment', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('timeliness', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('overall_management', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('overall_rating', models.IntegerField(blank=True, null=True, verbose_name='Overall Rating')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('submitted_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date Submitted')),
                ('evaluation_number', models.IntegerField(blank=True, null=True, verbose_name='No.')),
                ('access_token', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluations', to='docquestapp.project')),
                ('proponent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('proponent', 'project', 'attendee_name')},
            },
        ),
    ]
