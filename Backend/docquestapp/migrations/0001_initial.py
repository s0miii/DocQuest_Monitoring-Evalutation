# Generated by Django 5.0.7 on 2024-11-14 08:40

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Barangay',
            fields=[
                ('barangayID', models.AutoField(primary_key=True, serialize=False)),
                ('barangay', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('cityID', models.AutoField(primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=50)),
                ('postalCode', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Deliverables',
            fields=[
                ('deliverableID', models.AutoField(primary_key=True, serialize=False)),
                ('deliverableName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('provinceID', models.AutoField(primary_key=True, serialize=False)),
                ('province', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('regionID', models.AutoField(primary_key=True, serialize=False)),
                ('region', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Roles',
            fields=[
                ('roleID', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=4)),
                ('role', models.CharField(default='NO ROLE', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('userID', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('password', models.CharField(max_length=100)),
                ('firstname', models.CharField(max_length=50)),
                ('middlename', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
                ('campus', models.CharField(default='NO CAMPUS SELECTED', max_length=50)),
                ('college', models.CharField(default='NO COLLEGE SELECTED', max_length=50)),
                ('department', models.CharField(default='NO DEPARTMENT SELECTED', max_length=50)),
                ('contactNumber', models.CharField(default='NO NUMBER', max_length=15)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('role', models.ManyToManyField(related_name='user', to='docquestapp.roles')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('addressID', models.AutoField(primary_key=True, serialize=False)),
                ('street', models.CharField(max_length=150)),
                ('barangayID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='docquestapp.barangay')),
            ],
        ),
        migrations.AddField(
            model_name='barangay',
            name='cityID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='barangay', to='docquestapp.city'),
        ),
        migrations.CreateModel(
            name='DocumentPDF',
            fields=[
                ('documentID', models.AutoField(primary_key=True, serialize=False)),
                ('fileData', models.BinaryField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('source_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='MOA',
            fields=[
                ('moaID', models.AutoField(primary_key=True, serialize=False)),
                ('partyADescription', models.TextField()),
                ('partyBDescription', models.TextField()),
                ('termination', models.TextField()),
                ('status', models.CharField(choices=[('approved', 'Approved'), ('pending', 'Pending'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('uniqueCode', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moaUser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FirstParty',
            fields=[
                ('firstPartyID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('moaID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='firstParty', to='docquestapp.moa')),
            ],
        ),
        migrations.CreateModel(
            name='Effectivity',
            fields=[
                ('effectivityID', models.AutoField(primary_key=True, serialize=False)),
                ('effectivity', models.TextField()),
                ('moaID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='effectivity', to='docquestapp.moa')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notificationID', models.AutoField(primary_key=True, serialize=False)),
                ('source_id', models.PositiveIntegerField()),
                ('message', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Unread', 'Unread'), ('Read', 'Read')], default='Unread', max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerAgency',
            fields=[
                ('agencyID', models.AutoField(primary_key=True, serialize=False)),
                ('agencyName', models.CharField(max_length=100)),
                ('addressID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='partnerAgency', to='docquestapp.address')),
            ],
        ),
        migrations.CreateModel(
            name='PartyObligation',
            fields=[
                ('poID', models.AutoField(primary_key=True, serialize=False)),
                ('obligation', models.TextField()),
                ('party', models.TextField()),
                ('moaID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partyObligation', to='docquestapp.moa')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('projectID', models.AutoField(primary_key=True, serialize=False)),
                ('programCategory', models.CharField(max_length=50)),
                ('projectTitle', models.CharField(max_length=150)),
                ('projectType', models.CharField(max_length=50)),
                ('projectCategory', models.CharField(max_length=100)),
                ('researchTitle', models.CharField(max_length=150)),
                ('program', models.CharField(max_length=150)),
                ('accreditationLevel', models.CharField(max_length=50)),
                ('college', models.CharField(max_length=50)),
                ('beneficiaries', models.TextField()),
                ('targetImplementation', models.DateField()),
                ('totalHours', models.FloatField()),
                ('background', models.TextField()),
                ('projectComponent', models.TextField()),
                ('targetScope', models.TextField()),
                ('ustpBudget', models.IntegerField(default=0)),
                ('partnerAgencyBudget', models.IntegerField(default=0)),
                ('totalBudget', models.IntegerField()),
                ('status', models.CharField(choices=[('approved', 'Approved'), ('pending', 'Pending'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
                ('uniqueCode', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('agency', models.ManyToManyField(related_name='projectAgency', to='docquestapp.partneragency')),
                ('moaID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projectMoa', to='docquestapp.moa')),
                ('projectLocationID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projectLocation', to='docquestapp.address')),
                ('proponents', models.ManyToManyField(related_name='proponent', to=settings.AUTH_USER_MODEL)),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projectUser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NonUserProponents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nonUserProponents', to='docquestapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='MonitoringPlanAndSchedule',
            fields=[
                ('MPASID', models.AutoField(primary_key=True, serialize=False)),
                ('approach', models.TextField()),
                ('dataGatheringStrategy', models.TextField()),
                ('schedule', models.TextField()),
                ('implementationPhase', models.TextField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoringPlanSchedules', to='docquestapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='LoadingOfTrainers',
            fields=[
                ('LOTID', models.AutoField(primary_key=True, serialize=False)),
                ('faculty', models.CharField(max_length=50)),
                ('trainingLoad', models.TextField()),
                ('hours', models.FloatField()),
                ('ustpBudget', models.IntegerField()),
                ('agencyBudget', models.IntegerField()),
                ('totalBudgetRequirement', models.IntegerField()),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='loadingOfTrainers', to='docquestapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='GoalsAndObjectives',
            fields=[
                ('GAOID', models.AutoField(primary_key=True, serialize=False)),
                ('goalsAndObjectives', models.TextField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goalsAndObjectives', to='docquestapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='EvaluationAndMonitoring',
            fields=[
                ('EAMID', models.AutoField(primary_key=True, serialize=False)),
                ('projectSummary', models.TextField(blank=True, null=True)),
                ('indicators', models.TextField(blank=True, null=True)),
                ('meansOfVerification', models.TextField(blank=True, null=True)),
                ('risksAssumptions', models.TextField(blank=True, null=True)),
                ('type', models.CharField(max_length=100)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluationAndMonitorings', to='docquestapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='BudgetRequirementsItems',
            fields=[
                ('itemID', models.AutoField(primary_key=True, serialize=False)),
                ('itemName', models.CharField(max_length=50)),
                ('ustpAmount', models.IntegerField()),
                ('partnerAmount', models.IntegerField()),
                ('totalAmount', models.IntegerField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budgetRequirements', to='docquestapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectActivities',
            fields=[
                ('projectActivitiesID', models.AutoField(primary_key=True, serialize=False)),
                ('objective', models.TextField()),
                ('involved', models.TextField()),
                ('targetDate', models.DateField()),
                ('personResponsible', models.TextField()),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projectActivities', to='docquestapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectManagementTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projectManagementTeam', to='docquestapp.project')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='provinceID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city', to='docquestapp.province'),
        ),
        migrations.AddField(
            model_name='province',
            name='regionID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='province', to='docquestapp.region'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('reviewID', models.AutoField(primary_key=True, serialize=False)),
                ('source_id', models.PositiveIntegerField()),
                ('reviewStatus', models.CharField(choices=[('approved', 'Approved'), ('pending', 'Pending'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('reviewDate', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('contentOwnerID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewsContentOwner', to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('reviewedByID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewsReviewedBy', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SecondParty',
            fields=[
                ('secondPartyID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('moaID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secondParty', to='docquestapp.moa')),
            ],
        ),
        migrations.CreateModel(
            name='Signatories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signatories', to='docquestapp.project')),
            ],
        ),
        migrations.CreateModel(
            name='UserProjectDeliverables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deliverableID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userProjectDeliverables', to='docquestapp.deliverables')),
                ('projectID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userProjectDeliverables', to='docquestapp.project')),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userProjectDeliverables', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Witnesses',
            fields=[
                ('witnessID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('moaID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='witnesses', to='docquestapp.moa')),
            ],
        ),
        migrations.CreateModel(
            name='Witnesseth',
            fields=[
                ('witnessethID', models.AutoField(primary_key=True, serialize=False)),
                ('whereas', models.TextField()),
                ('moaID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='witnesseth', to='docquestapp.moa')),
            ],
        ),
    ]
